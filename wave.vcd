$date
	Thu Mar 17 21:32:28 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module openmips_min_sopc_tb $end
$var reg 1 ! CLOCK_50 $end
$var reg 1 " rst $end
$scope module openmips_min_sopc0 $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var wire 1 # rom_ce $end
$var wire 32 $ inst_addr [31:0] $end
$var wire 32 % inst [31:0] $end
$scope module inst_rom0 $end
$var wire 1 # ce $end
$var wire 32 & addr [31:0] $end
$var reg 32 ' inst [31:0] $end
$upscope $end
$scope module openmips0 $end
$var wire 1 ! clk $end
$var wire 32 ( rom_addr_o [31:0] $end
$var wire 32 ) rom_data_i [31:0] $end
$var wire 1 " rst $end
$var wire 1 * wb_wreg_i $end
$var wire 32 + wb_wdata_i [31:0] $end
$var wire 5 , wb_wd_i [4:0] $end
$var wire 1 # rom_ce_o $end
$var wire 1 - reg2_read $end
$var wire 32 . reg2_data [31:0] $end
$var wire 5 / reg2_addr [4:0] $end
$var wire 1 0 reg1_read $end
$var wire 32 1 reg1_data [31:0] $end
$var wire 5 2 reg1_addr [4:0] $end
$var wire 32 3 pc [31:0] $end
$var wire 1 4 mem_wreg_o $end
$var wire 1 5 mem_wreg_i $end
$var wire 32 6 mem_wdata_o [31:0] $end
$var wire 32 7 mem_wdata_i [31:0] $end
$var wire 5 8 mem_wd_o [4:0] $end
$var wire 5 9 mem_wd_i [4:0] $end
$var wire 1 : id_wreg_o $end
$var wire 5 ; id_wd_o [4:0] $end
$var wire 32 < id_reg2_o [31:0] $end
$var wire 32 = id_reg1_o [31:0] $end
$var wire 32 > id_pc_i [31:0] $end
$var wire 32 ? id_inst_i [31:0] $end
$var wire 3 @ id_alusel_o [2:0] $end
$var wire 8 A id_aluop_o [7:0] $end
$var wire 1 B ex_wreg_o $end
$var wire 1 C ex_wreg_i $end
$var wire 32 D ex_wdata_o [31:0] $end
$var wire 5 E ex_wd_o [4:0] $end
$var wire 5 F ex_wd_i [4:0] $end
$var wire 32 G ex_reg2_i [31:0] $end
$var wire 32 H ex_reg1_i [31:0] $end
$var wire 3 I ex_alusel_i [2:0] $end
$var wire 8 J ex_aluop_i [7:0] $end
$scope module ex0 $end
$var wire 1 " rst $end
$var wire 1 C wreg_i $end
$var wire 5 K wd_i [4:0] $end
$var wire 32 L reg2_i [31:0] $end
$var wire 32 M reg1_i [31:0] $end
$var wire 3 N alusel_i [2:0] $end
$var wire 8 O aluop_i [7:0] $end
$var reg 32 P logicout [31:0] $end
$var reg 5 Q wd_o [4:0] $end
$var reg 32 R wdata_o [31:0] $end
$var reg 1 B wreg_o $end
$upscope $end
$scope module ex_mem0 $end
$var wire 1 ! clk $end
$var wire 5 S ex_wd [4:0] $end
$var wire 32 T ex_wdata [31:0] $end
$var wire 1 B ex_wreg $end
$var wire 1 " rst $end
$var reg 5 U mem_wd [4:0] $end
$var reg 32 V mem_wdata [31:0] $end
$var reg 1 5 mem_wreg $end
$upscope $end
$scope module id0 $end
$var wire 5 W ex_wd_i [4:0] $end
$var wire 32 X ex_wdata_i [31:0] $end
$var wire 1 Y ex_wreg_i $end
$var wire 5 Z mem_wd_i [4:0] $end
$var wire 32 [ mem_wdata_i [31:0] $end
$var wire 1 \ mem_wreg_i $end
$var wire 1 " rst $end
$var wire 32 ] reg2_data_i [31:0] $end
$var wire 32 ^ reg1_data_i [31:0] $end
$var wire 32 _ pc_i [31:0] $end
$var wire 5 ` op4 [4:0] $end
$var wire 6 a op3 [5:0] $end
$var wire 5 b op2 [4:0] $end
$var wire 6 c op [5:0] $end
$var wire 32 d inst_i [31:0] $end
$var reg 8 e aluop_o [7:0] $end
$var reg 3 f alusel_o [2:0] $end
$var reg 32 g imm [31:0] $end
$var reg 1 h instvalid $end
$var reg 5 i reg1_addr_o [4:0] $end
$var reg 32 j reg1_o [31:0] $end
$var reg 1 0 reg1_read_o $end
$var reg 5 k reg2_addr_o [4:0] $end
$var reg 32 l reg2_o [31:0] $end
$var reg 1 - reg2_read_o $end
$var reg 5 m wd_o [4:0] $end
$var reg 1 : wreg_o $end
$upscope $end
$scope module id_ex0 $end
$var wire 1 ! clk $end
$var wire 8 n id_aluop [7:0] $end
$var wire 3 o id_alusel [2:0] $end
$var wire 32 p id_reg1 [31:0] $end
$var wire 32 q id_reg2 [31:0] $end
$var wire 5 r id_wd [4:0] $end
$var wire 1 : id_wreg $end
$var wire 1 " rst $end
$var reg 8 s ex_aluop [7:0] $end
$var reg 3 t ex_alusel [2:0] $end
$var reg 32 u ex_reg1 [31:0] $end
$var reg 32 v ex_reg2 [31:0] $end
$var reg 5 w ex_wd [4:0] $end
$var reg 1 C ex_wreg $end
$upscope $end
$scope module if_id0 $end
$var wire 1 ! clk $end
$var wire 32 x if_inst [31:0] $end
$var wire 1 " rst $end
$var wire 32 y if_pc [31:0] $end
$var reg 32 z id_inst [31:0] $end
$var reg 32 { id_pc [31:0] $end
$upscope $end
$scope module mem0 $end
$var wire 1 " rst $end
$var wire 5 | wd_i [4:0] $end
$var wire 32 } wdata_i [31:0] $end
$var wire 1 5 wreg_i $end
$var reg 5 ~ wd_o [4:0] $end
$var reg 32 !" wdata_o [31:0] $end
$var reg 1 4 wreg_o $end
$upscope $end
$scope module mem_wb0 $end
$var wire 1 ! clk $end
$var wire 5 "" mem_wd [4:0] $end
$var wire 32 #" mem_wdata [31:0] $end
$var wire 1 4 mem_wreg $end
$var wire 1 " rst $end
$var reg 5 $" wb_wd [4:0] $end
$var reg 32 %" wb_wdata [31:0] $end
$var reg 1 * wb_wreg $end
$upscope $end
$scope module pc_reg0 $end
$var wire 1 ! clk $end
$var wire 1 " rst $end
$var reg 1 # ce $end
$var reg 32 &" pc [31:0] $end
$upscope $end
$scope module regfile1 $end
$var wire 1 ! clk $end
$var wire 5 '" raddr1 [4:0] $end
$var wire 5 (" raddr2 [4:0] $end
$var wire 1 0 re1 $end
$var wire 1 - re2 $end
$var wire 1 " rst $end
$var wire 5 )" waddr [4:0] $end
$var wire 32 *" wdata [31:0] $end
$var wire 1 * we $end
$var reg 32 +" rdata1 [31:0] $end
$var reg 32 ," rdata2 [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 ,"
b0 +"
bx *"
bx )"
b0 ("
b0 '"
bx &"
bx %"
bx $"
b0 #"
b0 ""
b0 !"
b0 ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
b0 r
b0 q
b0 p
b0 o
b0 n
b0 m
b0 l
b0 k
b0 j
b0 i
0h
b0 g
b0 f
b0 e
bx d
bx c
bx b
bx a
bx `
bx _
b0 ^
b0 ]
z\
bz [
bz Z
zY
bz X
bz W
bx V
bx U
b0 T
bx S
b0 R
bx Q
b0 P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
b0 D
xC
xB
b0 A
b0 @
bx ?
bx >
b0 =
b0 <
b0 ;
0:
bx 9
b0 8
bx 7
b0 6
x5
04
bx 3
b0 2
b0 1
00
b0 /
b0 .
0-
bx ,
bx +
x*
bx )
bx (
bx '
bx &
bx %
bx $
x#
1"
0!
$end
#10000
b0 %
b0 '
b0 )
b0 x
0B
b0 E
b0 Q
b0 S
b0 `
b0 a
b0 b
b0 c
0#
b0 ?
b0 d
b0 z
b0 >
b0 _
b0 {
0C
b0 F
b0 K
b0 w
b0 G
b0 L
b0 v
b0 H
b0 M
b0 u
b0 I
b0 N
b0 t
b0 J
b0 O
b0 s
b0 7
b0 V
b0 }
05
b0 9
b0 U
b0 |
b0 +
b0 %"
b0 *"
0*
b0 ,
b0 $"
b0 )"
1!
#20000
0!
#30000
b0 $
b0 &
b0 (
b0 3
b0 y
b0 &"
1!
#40000
0!
#50000
1!
#60000
0!
#70000
1!
#80000
0!
#90000
1!
#100000
0!
#110000
1!
#120000
0!
#130000
1!
#140000
0!
#150000
1!
#160000
0!
#170000
1!
#180000
0!
#190000
1!
#195000
1h
0"
#200000
0!
#210000
b110100000000010001000100000000 %
b110100000000010001000100000000 '
b110100000000010001000100000000 )
b110100000000010001000100000000 x
1#
1!
#220000
0!
#230000
b1000100000000 <
b1000100000000 l
b1000100000000 q
0h
b1000100000000 g
10
b100101 A
b100101 e
b100101 n
b1 @
b1 f
b1 o
1:
b1 /
b1 k
b1 ("
b1 ;
b1 m
b1 r
b110100001000010000000000100000 %
b110100001000010000000000100000 '
b110100001000010000000000100000 )
b110100001000010000000000100000 x
b1 `
b100 b
b1101 c
b110100000000010001000100000000 ?
b110100000000010001000100000000 d
b110100000000010001000100000000 z
b100 $
b100 &
b100 (
b100 3
b100 y
b100 &"
1!
#240000
0!
#250000
bx =
bx j
bx p
b100000 <
b100000 l
b100000 q
bx 1
bx ^
bx +"
b1000100000000 D
b1000100000000 R
b1000100000000 T
b110100001000010100010000000000 %
b110100001000010100010000000000 '
b110100001000010100010000000000 )
b110100001000010100010000000000 x
b100000 g
b1 2
b1 i
b1 '"
10
0h
1:
b1 ;
b1 m
b1 r
b1 @
b1 f
b1 o
b100101 A
b100101 e
b100101 n
1B
b1 E
b1 Q
b1 S
b1000100000000 P
b100000 a
b0 b
b1000 $
b1000 &
b1000 (
b1000 3
b1000 y
b1000 &"
b110100001000010000000000100000 ?
b110100001000010000000000100000 d
b110100001000010000000000100000 z
b100 >
b100 _
b100 {
1C
b1 F
b1 K
b1 w
b1000100000000 G
b1000100000000 L
b1000100000000 v
b1 I
b1 N
b1 t
b100101 J
b100101 O
b100101 s
1!
#260000
0!
#270000
bx1xxxxx D
bx1xxxxx R
bx1xxxxx T
b100010000000000 <
b100010000000000 l
b100010000000000 q
b1000100000000 6
b1000100000000 !"
b1000100000000 #"
14
b1 8
b1 ~
b1 ""
bx1xxxxx P
b100010000000000 g
10
0h
1:
b1 ;
b1 m
b1 r
b1 @
b1 f
b1 o
b100101 A
b100101 e
b100101 n
b110100001000010000000001000100 %
b110100001000010000000001000100 '
b110100001000010000000001000100 )
b110100001000010000000001000100 x
b0 a
b10000 b
b1000100000000 7
b1000100000000 V
b1000100000000 }
15
b1 9
b1 U
b1 |
b100000 G
b100000 L
b100000 v
bx H
bx M
bx u
b110100001000010100010000000000 ?
b110100001000010100010000000000 d
b110100001000010100010000000000 z
b1000 >
b1000 _
b1000 {
b1100 $
b1100 &
b1100 (
b1100 3
b1100 y
b1100 &"
1!
#280000
0!
#290000
b1000100 <
b1000100 l
b1000100 q
bx1xxx1xxxxxxxxxx D
bx1xxx1xxxxxxxxxx R
bx1xxx1xxxxxxxxxx T
b1000100000000 =
b1000100000000 j
b1000100000000 p
b10 %
b10 '
b10 )
b10 x
b1000100 g
10
0h
1:
b1 ;
b1 m
b1 r
b1 @
b1 f
b1 o
b100101 A
b100101 e
b100101 n
bx1xxx1xxxxxxxxxx P
bx1xxxxx 6
bx1xxxxx !"
bx1xxxxx #"
b1000100000000 1
b1000100000000 ^
b1000100000000 +"
b100 a
b1 b
b10000 $
b10000 &
b10000 (
b10000 3
b10000 y
b10000 &"
b110100001000010000000001000100 ?
b110100001000010000000001000100 d
b110100001000010000000001000100 z
b1100 >
b1100 _
b1100 {
b100010000000000 G
b100010000000000 L
b100010000000000 v
bx1xxxxx 7
bx1xxxxx V
bx1xxxxx }
b1000100000000 +
b1000100000000 %"
b1000100000000 *"
1*
b1 ,
b1 $"
b1 )"
1!
#300000
0!
#310000
b1000101000100 D
b1000101000100 R
b1000101000100 T
b0 <
b0 l
b0 q
b0 =
b0 j
b0 p
bx1xxx1xxxxxxxxxx 6
bx1xxx1xxxxxxxxxx !"
bx1xxx1xxxxxxxxxx #"
b1000101000100 P
b0 1
b0 ^
b0 +"
b0 g
b0 /
b0 k
b0 ("
b0 2
b0 i
b0 '"
00
1h
0:
b0 ;
b0 m
b0 r
b0 @
b0 f
b0 o
b0 A
b0 e
b0 n
b0 %
b0 '
b0 )
b0 x
b0 `
b10 a
b0 b
b0 c
bx1xxxxx +
bx1xxxxx %"
bx1xxxxx *"
bx1xxx1xxxxxxxxxx 7
bx1xxx1xxxxxxxxxx V
bx1xxx1xxxxxxxxxx }
b1000100 G
b1000100 L
b1000100 v
b1000100000000 H
b1000100000000 M
b1000100000000 u
b10 ?
b10 d
b10 z
b10000 >
b10000 _
b10000 {
b10100 $
b10100 &
b10100 (
b10100 3
b10100 y
b10100 &"
1!
#320000
0!
#330000
b0 D
b0 R
b0 T
0B
b0 E
b0 Q
b0 S
b0 P
b1000101000100 6
b1000101000100 !"
b1000101000100 #"
b0 a
b11000 $
b11000 &
b11000 (
b11000 3
b11000 y
b11000 &"
b0 ?
b0 d
b0 z
b10100 >
b10100 _
b10100 {
0C
b0 F
b0 K
b0 w
b0 G
b0 L
b0 v
b0 H
b0 M
b0 u
b0 I
b0 N
b0 t
b0 J
b0 O
b0 s
b1000101000100 7
b1000101000100 V
b1000101000100 }
bx1xxx1xxxxxxxxxx +
bx1xxx1xxxxxxxxxx %"
bx1xxx1xxxxxxxxxx *"
1!
#340000
0!
#350000
b0 6
b0 !"
b0 #"
04
b0 8
b0 ~
b0 ""
b1000101000100 +
b1000101000100 %"
b1000101000100 *"
b0 7
b0 V
b0 }
05
b0 9
b0 U
b0 |
b11000 >
b11000 _
b11000 {
b11100 $
b11100 &
b11100 (
b11100 3
b11100 y
b11100 &"
1!
#360000
0!
#370000
b100000 $
b100000 &
b100000 (
b100000 3
b100000 y
b100000 &"
b11100 >
b11100 _
b11100 {
b0 +
b0 %"
b0 *"
0*
b0 ,
b0 $"
b0 )"
1!
#380000
0!
#390000
b100000 >
b100000 _
b100000 {
b100100 $
b100100 &
b100100 (
b100100 3
b100100 y
b100100 &"
1!
#400000
0!
#410000
b10000000000001 %
b10000000000001 '
b10000000000001 )
b10000000000001 x
b101000 $
b101000 &
b101000 (
b101000 3
b101000 y
b101000 &"
b100100 >
b100100 _
b100100 {
1!
#420000
0!
#430000
b100 ;
b100 m
b100 r
b1000000010000000000000001 %
b1000000010000000000000001 '
b1000000010000000000000001 )
b1000000010000000000000001 x
b1 a
b10000000000001 ?
b10000000000001 d
b10000000000001 z
b101000 >
b101000 _
b101000 {
b101100 $
b101100 &
b101100 (
b101100 3
b101100 y
b101100 &"
1!
#440000
0!
#450000
b0 %
b0 '
b0 )
b0 x
b1 /
b1 k
b1 ("
b1000 2
b1000 i
b1000 '"
b0 ;
b0 m
b0 r
b100 E
b100 Q
b100 S
b1 `
b110000 $
b110000 &
b110000 (
b110000 3
b110000 y
b110000 &"
b1000000010000000000000001 ?
b1000000010000000000000001 d
b1000000010000000000000001 z
b101100 >
b101100 _
b101100 {
b100 F
b100 K
b100 w
1!
#460000
0!
#470000
b100 8
b100 ~
b100 ""
b0 E
b0 Q
b0 S
b0 /
b0 k
b0 ("
b0 2
b0 i
b0 '"
b0 `
b0 a
b100 9
b100 U
b100 |
b0 F
b0 K
b0 w
b0 ?
b0 d
b0 z
b110000 >
b110000 _
b110000 {
b110100 $
b110100 &
b110100 (
b110100 3
b110100 y
b110100 &"
1!
#480000
0!
#490000
b1 %
b1 '
b1 )
b1 x
b0 8
b0 ~
b0 ""
b111000 $
b111000 &
b111000 (
b111000 3
b111000 y
b111000 &"
b110100 >
b110100 _
b110100 {
b0 9
b0 U
b0 |
b100 ,
b100 $"
b100 )"
1!
#500000
0!
#510000
b0 %
b0 '
b0 )
b0 x
b1 a
b0 ,
b0 $"
b0 )"
b1 ?
b1 d
b1 z
b111000 >
b111000 _
b111000 {
b111100 $
b111100 &
b111100 (
b111100 3
b111100 y
b111100 &"
1!
#520000
0!
#530000
bx %
bx '
bx )
bx x
b0 a
b1000000 $
b1000000 &
b1000000 (
b1000000 3
b1000000 y
b1000000 &"
b0 ?
b0 d
b0 z
b111100 >
b111100 _
b111100 {
1!
#540000
0!
#550000
bx /
bx k
bx ("
bx 2
bx i
bx '"
bx ;
bx m
bx r
bx `
bx a
bx b
bx c
bx ?
bx d
bx z
b1000000 >
b1000000 _
b1000000 {
b1000100 $
b1000100 &
b1000100 (
b1000100 3
b1000100 y
b1000100 &"
1!
#560000
0!
#570000
bx E
bx Q
bx S
b1001000 $
b1001000 &
b1001000 (
b1001000 3
b1001000 y
b1001000 &"
b1000100 >
b1000100 _
b1000100 {
bx F
bx K
bx w
1!
#580000
0!
#590000
bx 8
bx ~
bx ""
bx 9
bx U
bx |
b1001000 >
b1001000 _
b1001000 {
b1001100 $
b1001100 &
b1001100 (
b1001100 3
b1001100 y
b1001100 &"
1!
#600000
0!
#610000
b1010000 $
b1010000 &
b1010000 (
b1010000 3
b1010000 y
b1010000 &"
b1001100 >
b1001100 _
b1001100 {
bx ,
bx $"
bx )"
1!
#620000
0!
#630000
b1010000 >
b1010000 _
b1010000 {
b1010100 $
b1010100 &
b1010100 (
b1010100 3
b1010100 y
b1010100 &"
1!
#640000
0!
#650000
b1011000 $
b1011000 &
b1011000 (
b1011000 3
b1011000 y
b1011000 &"
b1010100 >
b1010100 _
b1010100 {
1!
#660000
0!
#670000
b1011000 >
b1011000 _
b1011000 {
b1011100 $
b1011100 &
b1011100 (
b1011100 3
b1011100 y
b1011100 &"
1!
#680000
0!
#690000
b1100000 $
b1100000 &
b1100000 (
b1100000 3
b1100000 y
b1100000 &"
b1011100 >
b1011100 _
b1011100 {
1!
#700000
0!
#710000
b1100000 >
b1100000 _
b1100000 {
b1100100 $
b1100100 &
b1100100 (
b1100100 3
b1100100 y
b1100100 &"
1!
#720000
0!
#730000
b1101000 $
b1101000 &
b1101000 (
b1101000 3
b1101000 y
b1101000 &"
b1100100 >
b1100100 _
b1100100 {
1!
#740000
0!
#750000
b1101000 >
b1101000 _
b1101000 {
b1101100 $
b1101100 &
b1101100 (
b1101100 3
b1101100 y
b1101100 &"
1!
#760000
0!
#770000
b1110000 $
b1110000 &
b1110000 (
b1110000 3
b1110000 y
b1110000 &"
b1101100 >
b1101100 _
b1101100 {
1!
#780000
0!
#790000
b1110000 >
b1110000 _
b1110000 {
b1110100 $
b1110100 &
b1110100 (
b1110100 3
b1110100 y
b1110100 &"
1!
#800000
0!
#810000
b1111000 $
b1111000 &
b1111000 (
b1111000 3
b1111000 y
b1111000 &"
b1110100 >
b1110100 _
b1110100 {
1!
#820000
0!
#830000
b1111000 >
b1111000 _
b1111000 {
b1111100 $
b1111100 &
b1111100 (
b1111100 3
b1111100 y
b1111100 &"
1!
#840000
0!
#850000
b10000000 $
b10000000 &
b10000000 (
b10000000 3
b10000000 y
b10000000 &"
b1111100 >
b1111100 _
b1111100 {
1!
#860000
0!
#870000
b10000000 >
b10000000 _
b10000000 {
b10000100 $
b10000100 &
b10000100 (
b10000100 3
b10000100 y
b10000100 &"
1!
#880000
0!
#890000
b10001000 $
b10001000 &
b10001000 (
b10001000 3
b10001000 y
b10001000 &"
b10000100 >
b10000100 _
b10000100 {
1!
#900000
0!
#910000
b10001000 >
b10001000 _
b10001000 {
b10001100 $
b10001100 &
b10001100 (
b10001100 3
b10001100 y
b10001100 &"
1!
#920000
0!
#930000
b10010000 $
b10010000 &
b10010000 (
b10010000 3
b10010000 y
b10010000 &"
b10001100 >
b10001100 _
b10001100 {
1!
#940000
0!
#950000
b10010000 >
b10010000 _
b10010000 {
b10010100 $
b10010100 &
b10010100 (
b10010100 3
b10010100 y
b10010100 &"
1!
#960000
0!
#970000
b10011000 $
b10011000 &
b10011000 (
b10011000 3
b10011000 y
b10011000 &"
b10010100 >
b10010100 _
b10010100 {
1!
#980000
0!
#990000
b10011000 >
b10011000 _
b10011000 {
b10011100 $
b10011100 &
b10011100 (
b10011100 3
b10011100 y
b10011100 &"
1!
#1000000
0!
#1010000
b10100000 $
b10100000 &
b10100000 (
b10100000 3
b10100000 y
b10100000 &"
b10011100 >
b10011100 _
b10011100 {
1!
#1020000
0!
#1030000
b10100000 >
b10100000 _
b10100000 {
b10100100 $
b10100100 &
b10100100 (
b10100100 3
b10100100 y
b10100100 &"
1!
#1040000
0!
#1050000
b10101000 $
b10101000 &
b10101000 (
b10101000 3
b10101000 y
b10101000 &"
b10100100 >
b10100100 _
b10100100 {
1!
#1060000
0!
#1070000
b10101000 >
b10101000 _
b10101000 {
b10101100 $
b10101100 &
b10101100 (
b10101100 3
b10101100 y
b10101100 &"
1!
#1080000
0!
#1090000
b10110000 $
b10110000 &
b10110000 (
b10110000 3
b10110000 y
b10110000 &"
b10101100 >
b10101100 _
b10101100 {
1!
#1100000
0!
#1110000
b10110000 >
b10110000 _
b10110000 {
b10110100 $
b10110100 &
b10110100 (
b10110100 3
b10110100 y
b10110100 &"
1!
#1120000
0!
#1130000
b10111000 $
b10111000 &
b10111000 (
b10111000 3
b10111000 y
b10111000 &"
b10110100 >
b10110100 _
b10110100 {
1!
#1140000
0!
#1150000
b10111000 >
b10111000 _
b10111000 {
b10111100 $
b10111100 &
b10111100 (
b10111100 3
b10111100 y
b10111100 &"
1!
#1160000
0!
#1170000
b11000000 $
b11000000 &
b11000000 (
b11000000 3
b11000000 y
b11000000 &"
b10111100 >
b10111100 _
b10111100 {
1!
#1180000
0!
#1190000
b11000000 >
b11000000 _
b11000000 {
b11000100 $
b11000100 &
b11000100 (
b11000100 3
b11000100 y
b11000100 &"
1!
#1195000
